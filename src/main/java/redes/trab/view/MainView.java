package redes.trab.view;

import java.awt.event.KeyEvent;
import redes.trab.client.ClientUDP;
import redes.trab.server.ServerUDP;
import java.net.ServerSocket;
import java.net.Socket;
import javax.swing.JOptionPane;
import redes.trab.util.Util;

public class MainView extends javax.swing.JFrame {

    ServerSocket serverSocket;
    Socket client;
    ClientUDP myClientUDP;
    ServerUDP myServerUDP;
    String fileName;

    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
        //tfIP.setText(Inet4Address.getLocalHost().getHostAddress());
        jToolBar1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pmClear = new javax.swing.JPopupMenu();
        miClear = new javax.swing.JMenuItem();
        pmClear1 = new javax.swing.JPopupMenu();
        miClear1 = new javax.swing.JMenuItem();
        pmClear2 = new javax.swing.JPopupMenu();
        miClear2 = new javax.swing.JMenuItem();
        jDialog1 = new javax.swing.JDialog();
        tfPortUDPsend = new javax.swing.JTextField();
        tfPortUDPrecv = new javax.swing.JTextField();
        tfPortTCP = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        cbReuseAddress = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        listFiles = new java.awt.List();
        btnServer = new javax.swing.JButton();
        tfIP = new javax.swing.JTextField();
        tfBroadcastIP = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textArea = new java.awt.List();
        textError = new java.awt.List();
        btnClient = new javax.swing.JButton();
        cbCommand = new javax.swing.JComboBox<>();
        textAreaClient = new java.awt.List();
        tfSrcFolder = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfDestFolder = new javax.swing.JTextField();
        btnChooseFileSrcFolder = new javax.swing.JButton();
        btnChooseFileDestFolder = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        tfDownload = new javax.swing.JTextField();

        miClear.setText("Clear");
        miClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miClearActionPerformed(evt);
            }
        });
        pmClear.add(miClear);

        miClear1.setText("Clear");
        miClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miClear1ActionPerformed(evt);
            }
        });
        pmClear1.add(miClear1);

        miClear2.setText("Clear");
        miClear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miClear2ActionPerformed(evt);
            }
        });
        pmClear2.add(miClear2);

        jDialog1.setLocation(new java.awt.Point(800, 300));
        jDialog1.setMinimumSize(new java.awt.Dimension(400, 400));

        tfPortUDPsend.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfPortUDPsend.setText("5555");

        tfPortUDPrecv.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfPortUDPrecv.setText("5556");

        tfPortTCP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfPortTCP.setText("4545");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cbReuseAddress.setText("Reuse Address");

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("jTextField1");

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("jTextField2");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tfPortUDPsend)
            .addComponent(tfPortUDPrecv)
            .addComponent(tfPortTCP)
            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTextField1)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(cbReuseAddress)
                .addContainerGap(253, Short.MAX_VALUE))
            .addComponent(jTextField2)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(tfPortUDPsend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(tfPortUDPrecv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(tfPortTCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbReuseAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("P2P");
        setResizable(false);

        listFiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                listFilesMouseReleased(evt);
            }
        });

        btnServer.setText("Server");
        btnServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServerActionPerformed(evt);
            }
        });

        tfIP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfIPKeyReleased(evt);
            }
        });

        tfBroadcastIP.setText("255.255.255.255");

        jLabel1.setText("IP Address:");

        jLabel2.setText("Broadcast IP:");

        textArea.setBackground(new java.awt.Color(204, 204, 204));
        textArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                textAreaMouseReleased(evt);
            }
        });

        textError.setBackground(new java.awt.Color(255, 204, 204));

        btnClient.setText("Client");
        btnClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientActionPerformed(evt);
            }
        });

        cbCommand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 - Get All IP's From RCA", "2 - Get All Available Files", "3 - Download Selected File", "4 - Request Specific File" }));
        cbCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCommandActionPerformed(evt);
            }
        });

        textAreaClient.setBackground(new java.awt.Color(204, 204, 204));
        textAreaClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                textAreaClientMouseReleased(evt);
            }
        });

        tfSrcFolder.setText("D:\\Desktop\\Shared Files");

        jLabel3.setText("Source Folder:");

        jLabel4.setText("Dest. Folder:");

        tfDestFolder.setText("D:\\Desktop\\Received Files from Server");

        btnChooseFileSrcFolder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/file_icon.png"))); // NOI18N
        btnChooseFileSrcFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseFileSrcFolderActionPerformed(evt);
            }
        });

        btnChooseFileDestFolder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/file_icon.png"))); // NOI18N
        btnChooseFileDestFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseFileDestFolderActionPerformed(evt);
            }
        });

        jToolBar1.setBorder(null);
        jToolBar1.setFloatable(false);
        jToolBar1.add(tfDownload);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textArea, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfBroadcastIP, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tfIP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfSrcFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnChooseFileSrcFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(163, 163, 163)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textAreaClient, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                            .addComponent(btnClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbCommand, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfDestFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnChooseFileDestFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(listFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbCommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfBroadcastIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnChooseFileSrcFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfSrcFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(tfDestFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))))
                    .addComponent(btnChooseFileDestFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClient)
                    .addComponent(btnServer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textArea, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textAreaClient, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textError, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listFiles, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientActionPerformed

        int command = cbCommand.getSelectedIndex() + 1;

        if (tfBroadcastIP.getText().equals("")) {
            tfBroadcastIP.setBackground(new java.awt.Color(255, 204, 204));
            JOptionPane.showMessageDialog(null, "Type IP Broadcast.", "IP Broadcast", JOptionPane.INFORMATION_MESSAGE);
        } else if (tfDestFolder.getText().equals("")) {
            tfDestFolder.setBackground(new java.awt.Color(255, 204, 204));
            JOptionPane.showMessageDialog(null, "Choose directory that you want to save downloaded files.", "Destination Directory", JOptionPane.INFORMATION_MESSAGE);
        } else {
            tfBroadcastIP.setBackground(new java.awt.Color(255, 255, 255));
            tfDestFolder.setBackground(new java.awt.Color(255, 255, 255));
            switch (command) {
                case 1:
                    openClientUDP();
                    break;
                case 2:
                    openClientUDP();
                    break;
                case 3:
                    fileName = Util.getSelectedFile(listFiles)[1];
                    if (fileName != null) {
                        boolean existFile = Util.checkIfIHaveFile(fileName, tfDestFolder.getText());
                        if (existFile == false) {
                            openClientUDP();
                        }
                    } else if (listFiles.getItemCount() == 0) {
                        JOptionPane.showMessageDialog(null, "First, you need to request available files (Option 2). Or ask for one (Option 4)", "Empty list of files", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Select one file to download", "No file selected.", JOptionPane.INFORMATION_MESSAGE);
                    }
                    break;
                case 4:
                    if (tfDownload.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Type the file's name that you want to download.", "Type the file's name", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        openClientUDP();
                    }
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_btnClientActionPerformed

    private void btnServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServerActionPerformed
        if (tfIP.getText().equals("")) {
            tfIP.setBackground(new java.awt.Color(255, 204, 204));
            JOptionPane.showMessageDialog(null, "Type your machine IP.", "IP", JOptionPane.INFORMATION_MESSAGE);
        } else if (tfSrcFolder.getText().equals("")) {
            tfSrcFolder.setBackground(new java.awt.Color(255, 204, 204));
            JOptionPane.showMessageDialog(null, "Choose your source directory to share files.", "Source Directory", JOptionPane.INFORMATION_MESSAGE);
        } else {
            tfIP.setBackground(new java.awt.Color(255, 255, 255));
            tfSrcFolder.setBackground(new java.awt.Color(255, 255, 255));
            tfIP.setEnabled(false);
            tfBroadcastIP.setEnabled(false);
            tfSrcFolder.setEnabled(false);
            btnChooseFileSrcFolder.setEnabled(false);
            openServerUDP();
        }
    }//GEN-LAST:event_btnServerActionPerformed

    private void btnChooseFileSrcFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseFileSrcFolderActionPerformed
        Util.chooseDirectory("Choose Server source folder", tfSrcFolder);

    }//GEN-LAST:event_btnChooseFileSrcFolderActionPerformed

    private void btnChooseFileDestFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseFileDestFolderActionPerformed
        Util.chooseDirectory("Choose Client destination folder", tfDestFolder);
    }//GEN-LAST:event_btnChooseFileDestFolderActionPerformed

    private void miClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miClearActionPerformed
        if (listFiles.getItemCount() > 0) {
            listFiles.removeAll();
        }
    }//GEN-LAST:event_miClearActionPerformed

    private void listFilesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listFilesMouseReleased
        if (evt.isPopupTrigger()) {
            pmClear.show(listFiles, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_listFilesMouseReleased

    private void miClear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miClear1ActionPerformed
        if (textArea.getItemCount() > 0) {
            textArea.removeAll();
        }
    }//GEN-LAST:event_miClear1ActionPerformed

    private void miClear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miClear2ActionPerformed
        if (textAreaClient.getItemCount() > 0) {
            textAreaClient.removeAll();
        }
    }//GEN-LAST:event_miClear2ActionPerformed

    private void textAreaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textAreaMouseReleased
        if (evt.isPopupTrigger()) {
            pmClear1.show(textArea, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_textAreaMouseReleased

    private void textAreaClientMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textAreaClientMouseReleased
        if (evt.isPopupTrigger()) {
            pmClear2.show(textAreaClient, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_textAreaClientMouseReleased

    private void cbCommandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCommandActionPerformed
        if (cbCommand.getSelectedIndex() == 3) {
            jToolBar1.setVisible(true);
        } else {
            jToolBar1.setVisible(false);
        }
    }//GEN-LAST:event_cbCommandActionPerformed

    private void tfIPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIPKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            jDialog1.setVisible(true);
        }
    }//GEN-LAST:event_tfIPKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jDialog1.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                MainView main = new MainView();
                main.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChooseFileDestFolder;
    private javax.swing.JButton btnChooseFileSrcFolder;
    private javax.swing.JButton btnClient;
    private javax.swing.JButton btnServer;
    public static javax.swing.JComboBox<String> cbCommand;
    private javax.swing.JCheckBox cbReuseAddress;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToolBar jToolBar1;
    public static java.awt.List listFiles;
    private javax.swing.JMenuItem miClear;
    private javax.swing.JMenuItem miClear1;
    private javax.swing.JMenuItem miClear2;
    private javax.swing.JPopupMenu pmClear;
    private javax.swing.JPopupMenu pmClear1;
    private javax.swing.JPopupMenu pmClear2;
    public static java.awt.List textArea;
    public static java.awt.List textAreaClient;
    public static java.awt.List textError;
    public static javax.swing.JTextField tfBroadcastIP;
    public static javax.swing.JTextField tfDestFolder;
    public static javax.swing.JTextField tfDownload;
    public static javax.swing.JTextField tfIP;
    public static javax.swing.JTextField tfPortTCP;
    public static javax.swing.JTextField tfPortUDPrecv;
    public static javax.swing.JTextField tfPortUDPsend;
    public static javax.swing.JTextField tfSrcFolder;
    // End of variables declaration//GEN-END:variables

    public void openClientUDP() {
        myClientUDP = new ClientUDP();
        Thread threadClientUDP = new Thread(myClientUDP);
        threadClientUDP.start();
    }

    public void openServerUDP() {
        myServerUDP = new ServerUDP();
        Thread threadServerUDP = new Thread(myServerUDP);
        threadServerUDP.start();
    }
}
